import React from 'react';
import { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';
import { Answer, Question } from '../types';
import { questions } from '../data/questions';

// Create styles
const styles = StyleSheet.create({
  page: {
    padding: 30,
    backgroundColor: '#ffffff',
  },
  header: {
    marginBottom: 20,
    borderBottom: '2 solid #4ade80',
    paddingBottom: 10,
  },
  title: {
    fontSize: 24,
    color: '#166534',
    marginBottom: 10,
    textAlign: 'center',
  },
  subtitle: {
    fontSize: 16,
    color: '#374151',
    marginBottom: 5,
  },
  section: {
    margin: 10,
    padding: 10,
    backgroundColor: '#f0fdf4',
    borderRadius: 5,
  },
  sectionTitle: {
    fontSize: 16,
    color: '#166534',
    marginBottom: 10,
  },
  text: {
    fontSize: 12,
    color: '#374151',
    marginBottom: 5,
    lineHeight: 1.5,
  },
  statsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginVertical: 20,
  },
  statBox: {
    backgroundColor: '#dcfce7',
    padding: 15,
    borderRadius: 5,
    width: '45%',
  },
  statValue: {
    fontSize: 20,
    color: '#166534',
    textAlign: 'center',
    marginBottom: 5,
  },
  statLabel: {
    fontSize: 12,
    color: '#374151',
    textAlign: 'center',
  },
  recommendationBox: {
    backgroundColor: '#ecfdf5',
    padding: 10,
    marginVertical: 5,
    borderRadius: 5,
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 30,
    right: 30,
    textAlign: 'center',
    color: '#6b7280',
    fontSize: 10,
    borderTop: '1 solid #e5e7eb',
    paddingTop: 10,
  },
  logo: {
    width: 50,
    height: 50,
    alignSelf: 'center',
    marginBottom: 10,
  },
});

interface CarbonReportProps {
  name: string;
  email: string;
  totalCarbon: number;
  totalTrees: number;
  answers: Answer[];
}

export const CarbonReport: React.FC<CarbonReportProps> = ({
  name,
  email,
  totalCarbon,
  totalTrees,
  answers,
}) => {
  // Process answers to ensure we have all the data we need
  const processedAnswers = answers.map(answer => {
    const question = questions.find(q => q.id === answer.questionId);
    if (!question) {
      console.warn(`Question not found for id: ${answer.questionId}`);
      return answer;
    }

    const processedOptions = answer.selectedOptions.map(option => {
      const fullOption = question.options.find(q => q.id === option.id);
      if (!fullOption) {
        console.warn(`Option not found for id: ${option.id} in question: ${question.id}`);
        return option;
      }
      return {
        ...option,
        improvement: fullOption.improvement,
        performance: fullOption.performance
      };
    });

    return {
      ...answer,
      selectedOptions: processedOptions,
      question
    };
  }) as (Answer & { question: Question })[];

  console.log('Processed answers:', processedAnswers);

  return (
    <Document>
      {/* First Page - Summary */}
      <Page size="A4" style={styles.page}>
        <View style={styles.header}>
          <Image
            src="/images/go-green.png"
            style={styles.logo}
          />
          <Text style={styles.title}>Carbon Footprint Report</Text>
          <Text style={styles.subtitle}>Generated for: {name}</Text>
          <Text style={styles.text}>Email: {email}</Text>
          <Text style={styles.text}>Date: {new Date().toLocaleDateString()}</Text>
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Your Carbon Impact Summary</Text>
          <View style={styles.statsContainer}>
            <View style={styles.statBox}>
              <Text style={styles.statValue}>{totalCarbon.toLocaleString()}</Text>
              <Text style={styles.statLabel}>kg COâ‚‚/year</Text>
            </View>
            <View style={styles.statBox}>
              <Text style={styles.statValue}>{totalTrees.toLocaleString()}</Text>
              <Text style={styles.statLabel}>Trees Needed</Text>
            </View>
          </View>
          <Text style={styles.text}>
            Your annual carbon footprint is equivalent to the emissions from driving {(totalCarbon / 4.6).toFixed(0)} kilometers in a typical passenger vehicle.
          </Text>
        </View>

        <Text style={styles.footer}>
          Generated by Carbon Footprint Challenge â€¢ {new Date().getFullYear()}
        </Text>
      </Page>

      {/* Second Page - Recommendations */}
      <Page size="A4" style={styles.page}>
        <View style={styles.header}>
          <Text style={styles.title}>Your Personalized Recommendations</Text>
          <Text style={styles.subtitle}>Based on your choices, here's how you can reduce your carbon footprint:</Text>
        </View>

        {processedAnswers.map((answer, index) => {
          if (!answer.selectedOptions.length) return null;

          return (
            <View key={index} style={styles.recommendationBox}>
              <Text style={styles.sectionTitle}>
                {index + 1}. {answer.question?.text?.split('?')[0] || 'Question'}
              </Text>
              {answer.selectedOptions.map((option, optIndex) => (
                <View key={optIndex} style={{ marginBottom: 15, padding: 10, backgroundColor: '#f0fdf4' }}>
                  <Text style={[styles.text, { color: '#166534', marginBottom: 8 }]}>
                    Current Choice: {option.text}
                  </Text>
                  <Text style={[styles.text, { color: '#047857', marginBottom: 8 }]}>
                    Performance: {option.performance}
                  </Text>
                  <Text style={[styles.text, { color: '#374151', marginBottom: 8 }]}>
                    Carbon Impact: {option.carbonFootprint.toLocaleString()} kg COâ‚‚/year
                  </Text>
                  <Text style={[styles.text, { color: '#166534', marginBottom: 8, fontWeight: 'bold' }]}>
                    Recommendation:
                  </Text>
                  <Text style={[styles.text, { color: '#374151', marginLeft: 10 }]}>
                    {option.improvement}
                  </Text>
                </View>
              ))}
            </View>
          );
        })}

        <View style={[styles.section, { marginTop: 20 }]}>
          <Text style={[styles.text, { color: '#166534', fontWeight: 'bold' }]}>
            Key Recommendations:
          </Text>
          <View style={{ marginTop: 10 }}>
            {processedAnswers.map((answer) => 
              answer.selectedOptions.map((option) => (
                <View key={`${answer.questionId}-${option.id}`} style={styles.recommendationBox}>
                  <Text style={[styles.text, { color: '#374151', marginBottom: 5 }]}>
                    â€¢ {option.improvement}
                  </Text>
                </View>
              ))
            )}
          </View>
          <Text style={[styles.text, { marginTop: 10, color: '#4b5563', fontStyle: 'italic' }]}>
            By implementing these recommendations, you can reduce your carbon footprint from {totalCarbon.toLocaleString()} kg COâ‚‚/year and work towards a more sustainable future.
          </Text>
        </View>

        <Text style={styles.footer}>
          Together we can make a difference! ðŸŒ± Keep tracking your progress and implementing these recommendations.
        </Text>
      </Page>
    </Document>
  );
}; 